"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[135],{962:function(e,t,s){s.r(t),s.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var n=s(7462),r=s(3366),a=(s(7294),s(3905)),o=["components"],i={title:"Crossplane",linkTitle:"Crossplane",id:"crossplane",description:"Crossplane is an open source Kubernetes add-on that enables platform teams to assemble infrastructure from multiple vendors, and expose higher level self-service APIs for application teams to consume, without having to write any code.",slug:"/crossplane",tags:["crossplane","infrastructure","kubernetes","manifest"]},c=void 0,l={unversionedId:"IaKM/crossplane",id:"IaKM/crossplane",isDocsHomePage:!1,title:"Crossplane",description:"Crossplane is an open source Kubernetes add-on that enables platform teams to assemble infrastructure from multiple vendors, and expose higher level self-service APIs for application teams to consume, without having to write any code.",source:"@site/docs/IaKM/crossplane.md",sourceDirName:"IaKM",slug:"/crossplane",permalink:"/docs/crossplane",editUrl:"https://github.com/metaCluster/metaDocs/edit/master/website/docs/IaKM/crossplane.md",version:"current",frontMatter:{title:"Crossplane",linkTitle:"Crossplane",id:"crossplane",description:"Crossplane is an open source Kubernetes add-on that enables platform teams to assemble infrastructure from multiple vendors, and expose higher level self-service APIs for application teams to consume, without having to write any code.",slug:"/crossplane",tags:["crossplane","infrastructure","kubernetes","manifest"]},sidebar:"tutorialSidebar",previous:{title:"Global Load Balancer",permalink:"/docs/global-load-balancing-solution-for-kubernetes"}},u=[{value:"Author Information",id:"author-information",children:[]},{value:"Infrastructure as Kubernetes Manifest (IaKM)",id:"infrastructure-as-kubernetes-manifest-iakm",children:[]},{value:"Packages",id:"packages",children:[]},{value:"Providers",id:"providers",children:[]},{value:"Managed Resources",id:"managed-resources",children:[]},{value:"Composite Resources",id:"composite-resources",children:[]}],p={toc:u};function d(e){var t=e.components,s=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},p,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"author-information"},"Author Information"),(0,a.kt)("div",{class:"avatar"},(0,a.kt)("img",{class:"avatar__photo",src:"https://avatars.githubusercontent.com/u/45158470?s=200&v=4"}),(0,a.kt)("div",{class:"avatar__intro"},(0,a.kt)("div",{class:"avatar__name"},"Crossplane"),(0,a.kt)("small",{class:"avatar__subtitle"},"https://crossplane.io"))),(0,a.kt)("br",null),(0,a.kt)("h3",{id:"infrastructure-as-kubernetes-manifest-iakm"},"Infrastructure as Kubernetes Manifest (IaKM)"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/crossplane/crossplane/master/docs/media/banner.png",alt:"Crossplane"})),(0,a.kt)("p",null,"Crossplane is an open source Kubernetes add-on that transforms your cluster into\na ",(0,a.kt)("strong",{parentName:"p"},"universal control plane"),". Crossplane enables platform teams to assemble\ninfrastructure from multiple vendors, and expose higher level self-service APIs\nfor application teams to consume, without having to write any code."),(0,a.kt)("p",null,"Crossplane extends your Kubernetes cluster to support orchestrating any\ninfrastructure or managed service. Compose Crossplane's granular resources into\nhigher level abstractions that can be versioned, managed, deployed and consumed\nusing your favorite tools and existing processes. "),(0,a.kt)("p",null,"Crossplane is a ",(0,a.kt)("a",{parentName:"p",href:"https://www.cncf.io/"},"Cloud Native Compute Foundation")," project."),(0,a.kt)("h1",{id:"overview"},"Overview"),(0,a.kt)("p",null,"Crossplane introduces multiple building blocks that enable you to provision,\ncompose, and consume infrastructure using the Kubernetes API. These individual\nconcepts work together to allow for powerful separation of concern between\ndifferent personas in an organization, meaning that each member of a team\ninteracts with Crossplane at an appropriate level of abstraction."),(0,a.kt)("h2",{id:"packages"},"Packages"),(0,a.kt)("p",null,"[Packages]"," allow Crossplane to be extended to include new functionality. This\ntypically looks like bundling a set of Kubernetes ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/"},"CRDs")," and ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/#custom-controllers"},"controllers")," that\nrepresent and manage external infrastructure (i.e. a provider), then installing\nthem into a cluster where Crossplane is running. Crossplane handles making sure\nany new CRDs do not conflict with existing ones, as well as manages the RBAC and\nsecurity of new packages. Packages are not strictly required to be providers,\nbut it is the most common use-case for packages at this time."),(0,a.kt)("h2",{id:"providers"},"Providers"),(0,a.kt)("p",null,"Providers are packages that enable Crossplane to provision infrastructure on an\nexternal service. They bring CRDs (i.e. managed resources) that map one-to-one\nto external infrastructure resources, as well as controllers to manage the\nlife-cycle of those resources. You can read more about providers, including how\nto install and configure them, in the ","[providers documentation]","."),(0,a.kt)("h2",{id:"managed-resources"},"Managed Resources"),(0,a.kt)("p",null,"Managed resources are Kubernetes custom resources that represent infrastructure\nprimitives. Managed resources with an API version of ",(0,a.kt)("inlineCode",{parentName:"p"},"v1beta1")," or higher support\nevery field that the cloud provider does for the given resource. You can find\nthe Managed Resources and their API specifications for each provider on\n","[doc.crds.dev]"," and learn more in the ","[managed resources documentation]","."),(0,a.kt)("h2",{id:"composite-resources"},"Composite Resources"),(0,a.kt)("p",null,"A composite resource (XR) is a special kind of custom resource that is defined\nby a ",(0,a.kt)("inlineCode",{parentName:"p"},"CompositeResourceDefinition"),". It composes one or more managed resources\ninto a higher level infrastructure unit. Composite resources are infrastructure\noperator facing, but may optionally offer an application developer facing\ncomposite resource claim that acts as a proxy for a composite resource. You can\nlearn more about all of these concepts in the ","[composition documentation]","."))}d.isMDXComponent=!0}}]);